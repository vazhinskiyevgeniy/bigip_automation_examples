{
	"info": {
		"_postman_id": "afb2beb2-62f9-406d-8009-f62c3acd41b4",
		"name": "BIG-IP Next Access - BIG-IP Next CM API s",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7051083",
		"_collection_link": "https://universal-sunset-70927.postman.co/workspace/Next-Dev~c2317910-394f-482f-acb2-28e9e4a05db1/collection/7051083-afb2beb2-62f9-406d-8009-f62c3acd41b4?action=share&source=collection_link&creator=7051083"
	},
	"item": [
		{
			"name": "BIG-IP Next Workflows - with Central Manager",
			"item": [
				{
					"name": "Cert Auth Policy",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Login status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var resp = pm.response.json();\r",
											"pm.environment.set(\"bigip_next_cm_token\", resp.access_token);\r",
											"pm.collectionVariables.set(\"bigip_next_cm_token\", resp.access_token);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"{{bigip_next_cm_admin_password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/login",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Cert Auth policy POST",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"psp_policy_name\", \"access_cert_auth\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{psp_policy_name}}\",\n    \"policy_type\": \"PerSession\",\n    \"profileType\":\"ltm-apm\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"configuration\": {\n\t\t\t\t\"domainCookie\": \"\",\n\t\t\t\t\"externalServers\": [],\n\t\t\t\t\"httpOnlyCookie\": false,\n\t\t\t\t\"inactivityTimeout\": 900,\n\t\t\t\t\"logoutUriTimeout\": 5,\n\t\t\t\t\"maxConcurrentSessions\": 0,\n\t\t\t\t\"maxConcurrentUsers\": 0,\n\t\t\t\t\"maxFailureDelay\": 5,\n\t\t\t\t\"maxInProgressSessions\": 128,\n\t\t\t\t\"maxSessionTimeout\": 604800,\n\t\t\t\t\"minFailureDelay\": 2,\n\t\t\t\t\"name\": \"{{psp_policy_name}}\",\n\t\t\t\t\"persistentCookie\": false,\n\t\t\t\t\"policy\": {\n\t\t\t\t\t\"objectContent\": {\n\t\t\t\t\t\t\"defaultLanguage\": \"en\",\n\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"deny\",\n\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"allow\",\n\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"languages\": [\n\t\t\t\t\t\t\t\"en\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"macros\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"maxMacroLoopCount\": 1,\n\t\t\t\t\t\t\t\t\"name\": \"cert_auth_macro\",\n\t\t\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"aaa-on-demand-client-cert\",\n\t\t\t\t\t\t\t\t\t\"mode\": \"require\",\n\t\t\t\t\t\t\t\t\t\"name\": \"On-Demand-Certificate-Authentication-6446d8fe\",\n\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Branch-59a0dd30\",\n\t\t\t\t\t\t\t\t\t\t\t\"expression\": \"expr {[mcget {session.ssl.cert.valid}] == 0}\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"ruleId\": \"On-Demand-Certificate-7720856b\",\n\t\t\t\t\t\t\t\t\t\"ruleType\": \"aaa-on-demand-client-cert\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\"itemType\": \"macro-call\",\n\t\t\t\t\t\t\t\"macro\": \"cert_auth_macro\",\n\t\t\t\t\t\t\t\"name\": \"cert_auth_macro\",\n\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Deny\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"deny\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"allow\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"policyType\": \"PerSession\",\n\t\t\t\t\"profileType\": \"all\",\n\t\t\t\t\"restrictToSingleClientIP\": false,\n\t\t\t\t\"samesiteCookie\": false,\n\t\t\t\t\"samesiteCookieAttrValue\": \"strict\",\n\t\t\t\t\"scope\": \"profile\",\n\t\t\t\t\"secureCookie\": true,\n\t\t\t\t\"timeout\": 300,\n\t\t\t\t\"useHttp503OnError\": false\n\t\t\t},\n\t\t\t\"loggingConfiguration\": [\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"apmd\",\n\t\t\t\t\t\"level\": \"DEBUG\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"tmm\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"websso\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"renderer\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Policies GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"mbiq_policy_id\", pm.response.json()._embedded.policies[0].id);\r",
											"\r",
											"var policy_name_1 = \"Allow-Demo\"\r",
											"var resp = pm.response.json();\r",
											"pm.collectionVariables.set(\"mbiq_policy_id\", resp[\"_embedded\"][\"policies\"][0][\"id\"])\r",
											"pm.collectionVariables.set(\"mbiq_policy_name\", resp[\"_embedded\"][\"policies\"][0][\"name\"])\r",
											"var resp_policy_name_1 = pm.collectionVariables.get(\"mbiq_policy_name\")\r",
											"\r",
											"if ( policy_name_1  === resp_policy_name_1 ) {\r",
											"pm.test(\"Policy Found\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"}else {\r",
											"\r",
											"pm.test(\"Policy Not Found\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"id = resp.id;",
											"pm.collectionVariables.set(\"fast_path\", resp.path);",
											"pm.collectionVariables.set(\"appsvc-id\", id)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"cert_auth_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"access_cert_auth\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{app_name}}\",\n  \"set_name\": \"Examples\",\n  \"template_name\": \"http\",\n  \"type\": \"FAST\",\n  \"description\": \"\",\n  \"parameters\": {\n    \"pools\": [\n      {\n        \"loadBalancingMode\": \"round-robin\",\n        \"loadBalancingRatio\": 10,\n        \"monitorType\": [\n          \"http\"\n        ],\n        \"servicePort\": {{example_web_port}},\n        \"application_name\": \"{{app_name}}\",\n        \"poolName\": \"pool_{{app_name}}\"\n      }\n    ],\n    \"virtuals\": [\n      {\n        \"FastL4_idleTimeout\": 600,\n        \"FastL4_looseClose\": true,\n        \"FastL4_looseInitialization\": true,\n        \"FastL4_resetOnTimeout\": true,\n        \"FastL4_tcpCloseTimeout\": 43200,\n        \"FastL4_tcpHandshakeTimeout\": 43200,\n        \"TCP_idle_timeout\": 60,\n        \"UDP_idle_timeout\": 60,\n        \"accessAdditionalConfigurations\": \" \",\n        \"enable_FastL4\": false,\n        \"enable_HTTP2_Profile\": false,\n        \"enable_TCP_Profile\": false,\n        \"enable_TLS_Client\": true,\n        \"authenticationMode\": \"require\",\n        \"authenticationTrustCA\": \"ADDC_CA\",\n        \"trustCACertificate\": \"ADDC_CA\",\n        \"enable_TLS_Server\": false,\n        \"enable_UDP_Profile\": false,\n        \"enable_snat\": true,\n        \"snat_addresses\": [],\n        \"snat_automap\": true,\n        \"enable_WAF\": false,\n        \"enable_Access\": true,\n        \"accessPolicyEnum\": \"{{psp_policy_name}}\",\n        \"enable_iRules\": false,\n        \"virtualPort\": {{vip_port2}},\n        \"pool\": \"pool_{{app_name}}\",\n        \"virtualName\": \"vs_{{app_name}}\",\n        \"certificatesEnum\": \"self_demo.f5.com\"\n      }\n    ],\n    \"application_name\": \"{{app_name}}\",\n    \"application_description\": \"{{app_name}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deploy Application to Instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)",
											"pm.collectionVariables.set(\"deploymentID\", resp.deployments[0].deploymentID)",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deployments\": [\n    {\n      \"parameters\": {\n        \"pools\": [\n          {\n            \"poolName\": \"pool_{{app_name}}\",\n            \"poolMembers\": [\n              {\n                \"address\": \"{{example_web}}\",\n                \"name\": \"poolmember1\"\n              }\n            ]\n          }\n        ],\n        \"virtuals\": [\n          {\n            \"virtualAddress\": \"{{vip1}}\",\n            \"virtualName\": \"vs_{{app_name}}\"\n          }\n        ]\n      },\n      \"target\": {\n        \"address\": \"{{bigip_next_3_address}}\"\n      },\n      \"allow_overwrite\": true\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Access Sessions-All",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/access-sessions",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"access-sessions"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Machine Tunnel+Cert Authentication",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Login status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var resp = pm.response.json();\r",
											"pm.environment.set(\"bigip_next_cm_token\", resp.access_token);\r",
											"pm.collectionVariables.set(\"bigip_next_cm_token\", resp.access_token);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"{{bigip_next_cm_admin_password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/login",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Security files Ids",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"resp = pm.response.json();",
											"epsecId = resp._embedded.files[0].id;",
											"pm.collectionVariables.set(\"epsecId\", epsecId);",
											"vpnId = resp._embedded.files[1].id;",
											"pm.collectionVariables.set(\"vpnId\", vpnId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access/client-files",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access",
										"client-files"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create MachineTunnel_Cert Policy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"psp_policy_name\", \"machine_tunnel_policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{psp_policy_name}}\",\n\t\"policy_type\": \"PerSession\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"configuration\": {\n\t\t\t\t\"connectivityAccessPolicyName\": \"Machine_Tunnel_Policy_cap\",\n\t\t\t\t\"domainCookie\": \"\",\n\t\t\t\t\"epsec\": {\n\t\t\t\t\t\"file\": \"{{epsecId}}\"\n\t\t\t\t},\n\t\t\t\t\"externalServers\": [],\n\t\t\t\t\"httpOnlyCookie\": false,\n\t\t\t\t\"inactivityTimeout\": 900,\n\t\t\t\t\"leasePools\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"leasePoolType\": \"ipv4-lease-pool\",\n\t\t\t\t\t\t\"name\": \"machinetunnel-ipv4pool\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"logoutUriTimeout\": 5,\n\t\t\t\t\"maxConcurrentSessions\": 0,\n\t\t\t\t\"maxConcurrentUsers\": 0,\n\t\t\t\t\"maxFailureDelay\": 5,\n\t\t\t\t\"maxInProgressSessions\": 128,\n\t\t\t\t\"maxSessionTimeout\": 604800,\n\t\t\t\t\"minFailureDelay\": 2,\n\t\t\t\t\"name\": \"Machine_Tunnel_Policy\",\n\t\t\t\t\"persistentCookie\": false,\n\t\t\t\t\"policy\": {\n\t\t\t\t\t\"objectContent\": {\n\t\t\t\t\t\t\"defaultLanguage\": \"en\",\n\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"deny\",\n\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"allow\",\n\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"languages\": [\n\t\t\t\t\t\t\t\"en\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"macros\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"Emptyb93eca83\",\n\t\t\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\"itemType\": \"aaa-on-demand-client-cert\",\n\t\t\t\t\t\t\t\t\t\"mode\": \"require\",\n\t\t\t\t\t\t\t\t\t\"name\": \"On-Demand-Certificate-Authentication-9ae5a720\",\n\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Branch-6b757023\",\n\t\t\t\t\t\t\t\t\t\t\t\"expression\": \"expr {[mcget {session.ssl.cert.valid}] == 0}\",\n\t\t\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"resource-assign\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Advanced-Resource-Assign-8e513c16\",\n\t\t\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"ruleId\": \"Advanced-Resource-Assign-0e7435f1\",\n\t\t\t\t\t\t\t\t\t\t\t\"ruleType\": \"resource-assign\",\n\t\t\t\t\t\t\t\t\t\t\t\"rules\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"expression\": \"expr {[mcget {session.client.app_id}] == \\\"machine_tunnel\\\" || [mcget {session.client.app_id}] == \\\"edge\\\"}\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"networkAccessResources\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Network-Access-machinetunnel\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"webtopName\": \"Webtop-machine-tunnel\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"ruleId\": \"On-Demand-Certificate-463f6e7a\",\n\t\t\t\t\t\t\t\t\t\"ruleType\": \"aaa-on-demand-client-cert\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\"itemType\": \"macro-call\",\n\t\t\t\t\t\t\t\"macro\": \"Emptyb93eca83\",\n\t\t\t\t\t\t\t\"name\": \"Empty-d9323105\",\n\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Deny\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"deny\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"allow\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"policyType\": \"PerSession\",\n\t\t\t\t\"profileType\": \"all\",\n\t\t\t\t\"resources\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"fallbackSectionInitialState\": \"expanded\",\n\t\t\t\t\t\t\"minimizeToTray\": true,\n\t\t\t\t\t\t\"name\": \"Webtop-machine-tunnel\",\n\t\t\t\t\t\t\"resourceType\": \"WebtopFull\",\n\t\t\t\t\t\t\"showResourceSearch\": true,\n\t\t\t\t\t\t\"showWarningWhenClosed\": true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"addressSpaceLocalDnsServersExcluded\": false,\n\t\t\t\t\t\t\"addressSpaceLocalSubnetsExcluded\": false,\n\t\t\t\t\t\t\"addressSpaceProtect\": false,\n\t\t\t\t\t\t\"autolaunch\": false,\n\t\t\t\t\t\t\"clientIpFilterEngine\": false,\n\t\t\t\t\t\t\"compression\": \"none\",\n\t\t\t\t\t\t\"dnsHostConfig\": {\n\t\t\t\t\t\t\t\"enforceSearchOrder\": true,\n\t\t\t\t\t\t\t\"registerConnection\": false,\n\t\t\t\t\t\t\t\"useDnsSuffixForRegistration\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"driveMappings\": [],\n\t\t\t\t\t\t\"idleTimeoutThreshold\": 0,\n\t\t\t\t\t\t\"idleTimeoutWindow\": 0,\n\t\t\t\t\t\t\"ipv6LeasePoolName\": \"\",\n\t\t\t\t\t\t\"leasePoolName\": \"machinetunnel-ipv4pool\",\n\t\t\t\t\t\t\"microsoftNetworkClient\": false,\n\t\t\t\t\t\t\"microsoftNetworkServer\": false,\n\t\t\t\t\t\t\"name\": \"Network-Access-machinetunnel\",\n\t\t\t\t\t\t\"networkTunnelEnabled\": true,\n\t\t\t\t\t\t\"preserveSourcePortStrict\": \"none\",\n\t\t\t\t\t\t\"proxyArp\": false,\n\t\t\t\t\t\t\"resourceType\": \"ConnectivityResourceNetworkAccess\",\n\t\t\t\t\t\t\"splitTunneling\": false,\n\t\t\t\t\t\t\"staticHosts\": []\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"restrictToSingleClientIP\": false,\n\t\t\t\t\"samesiteCookie\": false,\n\t\t\t\t\"samesiteCookieAttrValue\": \"strict\",\n\t\t\t\t\"scope\": \"profile\",\n\t\t\t\t\"secureCookie\": false,\n\t\t\t\t\"timeout\": 300,\n\t\t\t\t\"useHttp503OnError\": false\n\t\t\t},\n\t\t\t\"connectivityProfileConfiguration\": {\n\t\t\t\t\"clientPolicy\": {\n\t\t\t\t\t\"ecLocationDnsList\": [],\n\t\t\t\t\t\"name\": \"Machine_Tunnel_Policy_cap_clientPolicy\"\n\t\t\t\t},\n\t\t\t\t\"name\": \"Machine_Tunnel_Policy_cap\",\n\t\t\t\t\"policyType\": \"ConnectivityAccessPolicy\",\n\t\t\t\t\"pppTunnel\": {\n\t\t\t\t\t\"profilePpp\": {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"loggingConfiguration\": [\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"apmd\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"tmm\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"websso\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"renderer\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"id = resp.id;",
											"pm.collectionVariables.set(\"fast_path\", resp.path);",
											"pm.collectionVariables.set(\"appsvc-id\", id)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"machine_tunnel_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"machine_tunnel_policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{app_name}}\",\n  \"set_name\": \"Examples\",\n  \"template_name\": \"http\",\n  \"type\": \"FAST\",\n  \"description\": \"\",\n  \"parameters\": {\n\t\t\t\t\"application_description\": \"\",\n\t\t\t\t\"application_name\": \"{{app_name}}\",\n\t\t\t\t\"enable_Global_Resiliency\": false,\n\t\t\t\t\"pools\": [],\n\t\t\t\t\"virtuals\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"FastL4_idleTimeout\": 600,\n\t\t\t\t\t\t\"FastL4_looseClose\": true,\n\t\t\t\t\t\t\"FastL4_looseInitialization\": true,\n\t\t\t\t\t\t\"FastL4_pvaAcceleration\": \"full\",\n\t\t\t\t\t\t\"FastL4_pvaDynamicClientPackets\": 1,\n\t\t\t\t\t\t\"FastL4_pvaDynamicServerPackets\": 0,\n\t\t\t\t\t\t\"FastL4_resetOnTimeout\": true,\n\t\t\t\t\t\t\"FastL4_tcpCloseTimeout\": 43200,\n\t\t\t\t\t\t\"FastL4_tcpHandshakeTimeout\": 43200,\n\t\t\t\t\t\t\"InspectionServicesEnum\": [],\n\t\t\t\t\t\t\"TCP_idle_timeout\": 60,\n\t\t\t\t\t\t\"UDP_idle_timeout\": 60,\n\t\t\t\t\t\t\"accessPolicyEnum\": \"{{psp_policy_name}}\",\n\t\t\t\t\t\t\"allow_networks\": [],\n\t\t\t\t\t\t\"ciphers\": \"DEFAULT\",\n\t\t\t\t\t\t\"ciphers_server\": \"DEFAULT\",\n\t\t\t\t\t\t\"enable_Access\": true,\n\t\t\t\t\t\t\"enable_FastL4\": false,\n\t\t\t\t\t\t\"enable_HTTP2_Profile\": false,\n\t\t\t\t\t\t\"enable_InspectionServices\": false,\n\t\t\t\t\t\t\"enable_SsloPolicy\": false,\n\t\t\t\t\t\t\"enable_TCP_Profile\": false,\n\t\t\t\t\t\t\"enable_TLS_Client\": true,\n\t\t\t\t\t\t\"enable_TLS_Server\": false,\n\t\t\t\t\t\t\"enable_UDP_Profile\": false,\n\t\t\t\t\t\t\"enable_WAF\": false,\n\t\t\t\t\t\t\"enable_allow_networks\": false,\n\t\t\t\t\t\t\"enable_iRules\": false,\n\t\t\t\t\t\t\"enable_mirroring\": true,\n\t\t\t\t\t\t\"enable_snat\": true,\n\t\t\t\t\t\t\"iRulesEnum\": [],\n\t\t\t\t\t\t\"multiCertificatesEnum\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"clientTlsName\": \"clientTLS\",\n\t\t\t\t\t\t\t\t\"ecdsaCertificate\": \"\",\n\t\t\t\t\t\t\t\t\"rsaCertificate\": \"self_demo.f5.com\",\n\t\t\t\t\t\t\t\t\"sniDefault\": true,\n\t\t\t\t\t\t\t\t\"sniServers\": []\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"pool\": \"\",\n\t\t\t\t\t\t\"snat_addresses\": [],\n\t\t\t\t\t\t\"snat_automap\": true,\n\t\t\t\t\t\t\"tls_c_1_1\": false,\n\t\t\t\t\t\t\"tls_c_1_2\": true,\n\t\t\t\t\t\t\"tls_c_1_3\": false,\n\t\t\t\t\t\t\"tls_s_1_2\": true,\n\t\t\t\t\t\t\"tls_s_1_3\": false,\n\t\t\t\t\t\t\"trustCACertificate\": \"ADDC_CA\",\n\t\t\t\t\t\t\"virtualAddress\": \"10.1.10.160\",\n\t\t\t\t\t\t\"virtualName\": \"vs_{{app_name}}\",\n\t\t\t\t\t\t\"virtualPort\": 443\n\t\t\t\t\t}\n\t\t\t\t]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deploy Application to Instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)",
											"pm.collectionVariables.set(\"deploymentID\", resp.deployments[0].deploymentID)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"machine_tunnel_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"machine_tunnel_policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"allow_overwrite\": true,\n  \"deployments\": [\n    {\n\t  \"additional_parameters\": {\n\t\t\t\"access\": [\n\t\t\t\t{\n\t\t\t\t\t\"leasePools\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"leasePoolType\": \"ipv4-lease-pool\",\n\t\t\t\t\t\t\t\"members\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"endAddr\": \"10.1.20.110\",\n\t\t\t\t\t\t\t\t\t\"startAddr\": \"10.1.20.100\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"machinetunnel-ipv4pool\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"policyName\": \"{{psp_policy_name}}\",\n\t\t\t\t\t\"serverPools\": [],\n\t\t\t\t\t\"trafficPools\": []\n\t\t\t\t}\n\t\t\t]\n\t\t},\n      \"parameters\": {\n        \"pools\": [\n\n        ],\n        \"virtuals\": [\n          {\n            \"virtualAddress\": \"10.1.10.160\",\n            \"virtualName\": \"vs_{{app_name}}\",\n            \"allow_networks\": [],\n            \"enable_allow_networks\": false\n          }\n        ]\n      },\n      \"target\": {\n        \"address\": \"{{bigip_next_3_address}}\"\n      },\n      \"allow_overwrite\": true\n    }\n  ],\n    \"application_name\": \"{{app_name}}\"\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Access Sessions-All",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/access-sessions",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"access-sessions"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Policies GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"mbiq_policy_id\", pm.response.json()._embedded.policies[0].id);\r",
											"\r",
											"var policy_name_1 = \"Allow-Demo\"\r",
											"var resp = pm.response.json();\r",
											"pm.collectionVariables.set(\"mbiq_policy_id\", resp[\"_embedded\"][\"policies\"][0][\"id\"])\r",
											"pm.collectionVariables.set(\"mbiq_policy_name\", resp[\"_embedded\"][\"policies\"][0][\"name\"])\r",
											"var resp_policy_name_1 = pm.collectionVariables.get(\"mbiq_policy_name\")\r",
											"\r",
											"if ( policy_name_1  === resp_policy_name_1 ) {\r",
											"pm.test(\"Policy Found\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"}else {\r",
											"\r",
											"pm.test(\"Policy Not Found\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/apm/v1/policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"apm",
										"v1",
										"policies"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "SAML-Okta-Signed Policy",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Login status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var resp = pm.response.json();\r",
											"pm.environment.set(\"bigip_next_cm_token\", resp.access_token);\r",
											"pm.collectionVariables.set(\"bigip_next_cm_token\", resp.access_token);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"{{bigip_next_cm_admin_password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/login",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Certificate",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "filename",
											"value": "cert_okta_idp",
											"type": "default"
										},
										{
											"key": "file",
											"value": "",
											"type": "default"
										}
									]
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/certificate/v1/certificates",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"certificate",
										"v1",
										"certificates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Certificate to CM",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"okta_signed_cert\",\r\n    \"cert_text\": \"-----BEGIN CERTIFICATE-----\\nMIIDpDCCAoygAwIBAgIGAYMipe6XMA0GCSqGSIb3DQEBCwUAMIGSMQswCQYDVQQGEwJVUzETMBEG\\nA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEU\\nMBIGA1UECwwLU1NPUHJvdmlkZXIxEzARBgNVBAMMCmRldi04MTg4OTkxHDAaBgkqhkiG9w0BCQEW\\nDWluZm9Ab2t0YS5jb20wHhcNMjIwOTA5MTQyNjIzWhcNMzIwOTA5MTQyNzIzWjCBkjELMAkGA1UE\\nBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNV\\nBAoMBE9rdGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRMwEQYDVQQDDApkZXYtODE4ODk5MRwwGgYJ\\nKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\nmFlmAz5VmSklL6Z7EKriaV79Ff5xyFMDiAdZOFfX5/I65FV9aJaU9jqKLS+gfiAJjhbkdCxtEXW1\\nQKkDLV6LqXmlWJxhts/j6JhUjd9diUI6cGpyoZ0uDKs0MUxGB3KK/movVQ63bXZqLTtdCPKb9ew1\\nYQYMCn3B7b/Y7XLGQm+dOhjPst6RIrxGzcaIzFasU93O0ksJmRk3f76jn5KTp+VPPo6q7FcI+WB0\\nZze8jaO8hKAG3BwkHQiM1L8KirXXQwfUIsGmyZEEVouCvqa6pOB5wxp4oI4RlcqepzNq7UOWHdpd\\n4qvP9VEi8Oy1agMf28eIfth4/rs0PYiJif8BXQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCOuwwa\\nNHDsQHGvdVTtxJUHQWtLDftp1v7WCLRIeKDy53Jr5wNVhVKYPk2lHlK1W8VBatNwfIwksF/0IloU\\nSLtHFbIkgUrLwBtLXG8zPHo8cAcYWgT3WK8UOli568D0p179OeosPJ24V5LRVulKIBzAvuYXt2u1\\nhTqr+s8EyVWB1jX/tJTHf+mJsxq8VsvfOoe2ddbncwkMTgI2RwkZA6nqyq3fpFAD3BWMJnbV8onW\\nKaNu1L01GGpC55CXckdp1uKtePZ6Gdcl0EnWJzkJ/cgm2NlCkageo9VxAxO4YuC7Iko7w28PfWY9\\nW5QddRVQVsBqBt2wOBmUPElhUUBHCZsE\\n-----END CERTIFICATE-----\",\r\n    \"item_type\": \"PEM\"\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/certificate/v1/certificates/import",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"certificate",
										"v1",
										"certificates",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Signed Okta Policy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"psp_policy_name\", \"access_okta_policy\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{psp_policy_name}}\",\n\t\"policy_type\": \"PerSession\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"configuration\": {\n\t\t\t\t\"connectivityAccessPolicyName\": \"{{psp_policy_name}}_cap\",\n\t\t\t\t\"domainCookie\": \"\",\n\t\t\t\t\"externalServers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"certificate\": \"okta_signed_cert.crt\",\n\t\t\t\t\t\t\"entityId\": \"{{access_okta_signed_EntityID}}\",\n\t\t\t\t\t\t\"name\": \"Idp\",\n\t\t\t\t\t\t\"serverType\": \"SamlIdPConnector\",\n\t\t\t\t\t\t\"signatureType\": \"sha256\",\n\t\t\t\t\t\t\"ssoBinding\": \"http-post\",\n\t\t\t\t\t\t\"ssoUri\": \"{{access_okta_signed_SSOURI}}\",\n\t\t\t\t\t\t\"wantAuthnRequestSigned\": false\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"httpOnlyCookie\": false,\n\t\t\t\t\"inactivityTimeout\": 900,\n\t\t\t\t\"logoutUriTimeout\": 5,\n\t\t\t\t\"maxConcurrentSessions\": 0,\n\t\t\t\t\"maxConcurrentUsers\": 0,\n\t\t\t\t\"maxFailureDelay\": 5,\n\t\t\t\t\"maxInProgressSessions\": 128,\n\t\t\t\t\"maxSessionTimeout\": 604800,\n\t\t\t\t\"minFailureDelay\": 2,\n\t\t\t\t\"name\": \"{{psp_policy_name}}\",\n\t\t\t\t\"persistentCookie\": false,\n\t\t\t\t\"policy\": {\n\t\t\t\t\t\"objectContent\": {\n\t\t\t\t\t\t\"defaultLanguage\": \"en\",\n\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"deny\",\n\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"allow\",\n\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"languages\": [\n\t\t\t\t\t\t\t\"en\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"macros\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"Generic-SAML-Federation\",\n\t\t\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\"itemType\": \"saml\",\n\t\t\t\t\t\t\t\t\t\"name\": \"SAML-Federation\",\n\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\t\t\"expression\": \"expr {[mcget {session.saml.last.result}] == 1}\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"ruleType\": \"saml\",\n\t\t\t\t\t\t\t\t\t\"service\": {\n\t\t\t\t\t\t\t\t\t\t\"acsBinding\": \"http-post\",\n\t\t\t\t\t\t\t\t\t\t\"entityId\": \"{{access_okta_signed_SPEntityID}}\",\n\t\t\t\t\t\t\t\t\t\t\"idpConnectors\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Idp\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\"name\": \"SAML-Federation\",\n\t\t\t\t\t\t\t\t\t\t\"spURI\": \"{{access_okta_signed_SPURI}}\",\n\t\t\t\t\t\t\t\t\t\t\"wantAssertionEncrypted\": false,\n\t\t\t\t\t\t\t\t\t\t\"wantAssertionSigned\": true\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\"itemType\": \"macro-call\",\n\t\t\t\t\t\t\t\"macro\": \"Generic-SAML-Federation\",\n\t\t\t\t\t\t\t\"name\": \"Generic-SAML-Federation\",\n\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"allow\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Deny\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"deny\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"policyType\": \"PerSession\",\n\t\t\t\t\"profileType\": \"all\",\n\t\t\t\t\"restrictToSingleClientIP\": false,\n\t\t\t\t\"scope\": \"profile\",\n\t\t\t\t\"secureCookie\": false,\n\t\t\t\t\"timeout\": 300,\n\t\t\t\t\"useHttp503OnError\": false\n\t\t\t},\n\t\t\t\"connectivityProfileConfiguration\": {\n\t\t\t\t\"clientPolicy\": {\n\t\t\t\t\t\"ecLocationDnsList\": [],\n\t\t\t\t\t\"name\": \"{{psp_policy_name}}_cap_clientPolicy\"\n\t\t\t\t},\n\t\t\t\t\"name\": \"{{psp_policy_name}}_cap\",\n\t\t\t\t\"policyType\": \"ConnectivityAccessPolicy\",\n\t\t\t\t\"pppTunnel\": {\n\t\t\t\t\t\"profilePpp\": {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"loggingConfiguration\": [\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"apmd\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"tmm\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"websso\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"renderer\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"id = resp.id;",
											"pm.collectionVariables.set(\"fast_path\", resp.path);",
											"pm.collectionVariables.set(\"appsvc-id\", id)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"access_okta_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"access_okta_policy\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{app_name}}\",\n  \"set_name\": \"Examples\",\n  \"template_name\": \"http\",\n  \"type\": \"FAST\",\n  \"description\": \"\",\n  \"parameters\": {\n    \"pools\": [\n      {\n        \"loadBalancingMode\": \"round-robin\",\n        \"loadBalancingRatio\": 10,\n        \"monitorType\": [\n          \"http\"\n        ],\n        \"servicePort\": {{example_web_port}},\n        \"application_name\": \"{{app_name}}\",\n        \"poolName\": \"pool_{{app_name}}\"\n      }\n    ],\n    \"virtuals\": [\n      {\n        \"FastL4_idleTimeout\": 600,\n        \"FastL4_looseClose\": true,\n        \"FastL4_looseInitialization\": true,\n        \"FastL4_resetOnTimeout\": true,\n        \"FastL4_tcpCloseTimeout\": 43200,\n        \"FastL4_tcpHandshakeTimeout\": 43200,\n        \"TCP_idle_timeout\": 60,\n        \"UDP_idle_timeout\": 60,\n        \"accessAdditionalConfigurations\": \" \",\n        \"enable_FastL4\": false,\n        \"enable_HTTP2_Profile\": false,\n        \"enable_TCP_Profile\": false,\n        \"enable_TLS_Client\": true,\n        \"enable_TLS_Server\": false,\n        \"enable_UDP_Profile\": false,\n        \"enable_snat\": true,\n        \"snat_addresses\": [],\n        \"snat_automap\": true,\n        \"enable_WAF\": false,\n        \"enable_Access\": true,\n        \"accessPolicyEnum\": \"{{psp_policy_name}}\",\n        \"enable_iRules\": false,\n        \"virtualPort\": {{vip_port2}},\n        \"pool\": \"pool_{{app_name}}\",\n        \"virtualName\": \"vs_{{app_name}}\",\n        \"certificatesEnum\": \"self_demo.f5.com\"\n      }\n    ],\n    \"application_name\": \"{{app_name}}\",\n    \"application_description\": \"{{app_name}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deploy Application to Instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)",
											"pm.collectionVariables.set(\"deploymentID\", resp.deployments[0].deploymentID)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"access_okta_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"access_okta_policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deployments\": [\n    {\n      \"parameters\": {\n        \"pools\": [\n          {\n            \"poolName\": \"pool_{{app_name}}\",\n            \"poolMembers\": [\n              {\n                \"address\": \"{{example_web}}\",\n                \"name\": \"poolmember1\"\n              }\n            ]\n          }\n        ],\n        \"virtuals\": [\n          {\n            \"virtualAddress\": \"{{access_okta_signed_vip}}\",\n            \"virtualName\": \"vs_{{app_name}}\"\n          }\n        ]\n      },\n      \"target\": {\n        \"address\": \"{{bigip_next_3_address}}\"\n      },\n      \"allow_overwrite\": true\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Access Sessions-All",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/access-sessions",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"access-sessions"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Policies GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"mbiq_policy_id\", pm.response.json()._embedded.policies[0].id);\r",
											"\r",
											"var policy_name_1 = \"Allow-Demo\"\r",
											"var resp = pm.response.json();\r",
											"pm.collectionVariables.set(\"mbiq_policy_id\", resp[\"_embedded\"][\"policies\"][0][\"id\"])\r",
											"pm.collectionVariables.set(\"mbiq_policy_name\", resp[\"_embedded\"][\"policies\"][0][\"name\"])\r",
											"var resp_policy_name_1 = pm.collectionVariables.get(\"mbiq_policy_name\")\r",
											"\r",
											"if ( policy_name_1  === resp_policy_name_1 ) {\r",
											"pm.test(\"Policy Found\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"}else {\r",
											"\r",
											"pm.test(\"Policy Not Found\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/apm/v1/policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"apm",
										"v1",
										"policies"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "SAML-Okta-Signed With HTTP Connector",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Login status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var resp = pm.response.json();\r",
											"pm.environment.set(\"bigip_next_cm_token\", resp.access_token);\r",
											"pm.collectionVariables.set(\"bigip_next_cm_token\", resp.access_token);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"{{bigip_next_cm_admin_password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/login",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Certificate",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "filename",
											"value": "cert_okta_idp",
											"type": "default"
										},
										{
											"key": "file",
											"value": "",
											"type": "default"
										}
									]
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/certificate/v1/certificates",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"certificate",
										"v1",
										"certificates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Certificate to CM",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"okta_signed_cert\",\r\n    \"cert_text\": \"-----BEGIN CERTIFICATE-----\\nMIIDpDCCAoygAwIBAgIGAYMipe6XMA0GCSqGSIb3DQEBCwUAMIGSMQswCQYDVQQGEwJVUzETMBEG\\nA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEU\\nMBIGA1UECwwLU1NPUHJvdmlkZXIxEzARBgNVBAMMCmRldi04MTg4OTkxHDAaBgkqhkiG9w0BCQEW\\nDWluZm9Ab2t0YS5jb20wHhcNMjIwOTA5MTQyNjIzWhcNMzIwOTA5MTQyNzIzWjCBkjELMAkGA1UE\\nBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNV\\nBAoMBE9rdGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRMwEQYDVQQDDApkZXYtODE4ODk5MRwwGgYJ\\nKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\nmFlmAz5VmSklL6Z7EKriaV79Ff5xyFMDiAdZOFfX5/I65FV9aJaU9jqKLS+gfiAJjhbkdCxtEXW1\\nQKkDLV6LqXmlWJxhts/j6JhUjd9diUI6cGpyoZ0uDKs0MUxGB3KK/movVQ63bXZqLTtdCPKb9ew1\\nYQYMCn3B7b/Y7XLGQm+dOhjPst6RIrxGzcaIzFasU93O0ksJmRk3f76jn5KTp+VPPo6q7FcI+WB0\\nZze8jaO8hKAG3BwkHQiM1L8KirXXQwfUIsGmyZEEVouCvqa6pOB5wxp4oI4RlcqepzNq7UOWHdpd\\n4qvP9VEi8Oy1agMf28eIfth4/rs0PYiJif8BXQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCOuwwa\\nNHDsQHGvdVTtxJUHQWtLDftp1v7WCLRIeKDy53Jr5wNVhVKYPk2lHlK1W8VBatNwfIwksF/0IloU\\nSLtHFbIkgUrLwBtLXG8zPHo8cAcYWgT3WK8UOli568D0p179OeosPJ24V5LRVulKIBzAvuYXt2u1\\nhTqr+s8EyVWB1jX/tJTHf+mJsxq8VsvfOoe2ddbncwkMTgI2RwkZA6nqyq3fpFAD3BWMJnbV8onW\\nKaNu1L01GGpC55CXckdp1uKtePZ6Gdcl0EnWJzkJ/cgm2NlCkageo9VxAxO4YuC7Iko7w28PfWY9\\nW5QddRVQVsBqBt2wOBmUPElhUUBHCZsE\\n-----END CERTIFICATE-----\",\r\n    \"item_type\": \"PEM\"\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/certificate/v1/certificates/import",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"certificate",
										"v1",
										"certificates",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Policy + HTTP Conn",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"psp_policy_name\", \"access_okta_Connector_policy\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{psp_policy_name}}\",\n\t\"policy_type\": \"PerSession\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"configuration\": {\n\t\t\t\t\"connectivityAccessPolicyName\": \"{{psp_policy_name}}_cap\",\n\t\t\t\t\"domainCookie\": \"\",\n\t\t\t\t\"externalServers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"certificate\": \"okta_signed_cert.crt\",\n\t\t\t\t\t\t\"entityId\": \"{{access_okta_signed_EntityID}}\",\n\t\t\t\t\t\t\"name\": \"Idp\",\n\t\t\t\t\t\t\"serverType\": \"SamlIdPConnector\",\n\t\t\t\t\t\t\"signatureType\": \"sha256\",\n\t\t\t\t\t\t\"ssoBinding\": \"http-post\",\n\t\t\t\t\t\t\"ssoUri\": \"{{access_okta_signed_SSOURI}}\",\n\t\t\t\t\t\t\"wantAuthnRequestSigned\": false\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"auth\": \"none\",\n\t\t\t\t\t\t\"method\": \"GET\",\n\t\t\t\t\t\t\"name\": \"HTTP-Request-Okta_Con\",\n\t\t\t\t\t\t\"responseAction\": \"parse\",\n\t\t\t\t\t\t\"serverType\": \"HttpConnectorRequest\",\n\t\t\t\t\t\t\"transport\": {\n\t\t\t\t\t\t\t\"dnsResolverName\": \"global_f5_internal_net_resolver\",\n\t\t\t\t\t\t\t\"maxResponseSize\": 32768,\n\t\t\t\t\t\t\t\"timeout\": 5\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"url\": \"http://10.1.20.26:3000/api/users?email=%{session.saml.last.identity}\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"httpOnlyCookie\": false,\n\t\t\t\t\"inactivityTimeout\": 900,\n\t\t\t\t\"logoutUriTimeout\": 5,\n\t\t\t\t\"maxConcurrentSessions\": 0,\n\t\t\t\t\"maxConcurrentUsers\": 0,\n\t\t\t\t\"maxFailureDelay\": 5,\n\t\t\t\t\"maxInProgressSessions\": 128,\n\t\t\t\t\"maxSessionTimeout\": 604800,\n\t\t\t\t\"minFailureDelay\": 2,\n\t\t\t\t\"name\": \"{{psp_policy_name}}\",\n\t\t\t\t\"persistentCookie\": false,\n\t\t\t\t\"policy\": {\n\t\t\t\t\t\"objectContent\": {\n\t\t\t\t\t\t\"defaultLanguage\": \"en\",\n\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"deny\",\n\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"allow\",\n\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"languages\": [\n\t\t\t\t\t\t\t\"en\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"macros\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"Generic-SAML-Federation\",\n\t\t\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\"itemType\": \"saml\",\n\t\t\t\t\t\t\t\t\t\"name\": \"SAML-Federation\",\n\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\t\t\"expression\": \"expr {[mcget {session.saml.last.result}] == 1}\",\n\t\t\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"http-connector\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"HTTP-Connector-Okta_Con\",\n\t\t\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Branch-Risk_Assess_Good\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"expression\": \"expr {[mcget {session.http_connector.body.0.risk}] < 5}\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"customization\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"language\": \"en\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"message\": \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"proceedMessage\": \"Click here to close\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"title\": \"Your risk rate increased - Please consult the IT Admin team\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"language\": \"de\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"proceedMessage\": \"Klicken Sie hier, um fortzufahren.\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"title\": \"Klicken Sie auf den Link unten, um fortzufahren.\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"language\": \"es\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"proceedMessage\": \"Haga clic aquí para continuar\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"title\": \"Haga clic en el siguiente enlace para continuar.\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"language\": \"it\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"proceedMessage\": \"Click here to continue\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"title\": \"Please click the link below to continue.\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"language\": \"fr\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"proceedMessage\": \"Cliquez ici pour continuer\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"title\": \"Veuillez cliquer sur le lien ci-dessous pour continuer.\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"language\": \"ko\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"proceedMessage\": \"계속하려면 여기를 클릭하십시오.\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"title\": \"아래 링크를 클릭하여 계속하십시오.\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"language\": \"ja\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"proceedMessage\": \"ここをクリックしてください\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"title\": \"下のリンクをクリックしてください。\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"language\": \"zh-cn\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"proceedMessage\": \"单击此处继续\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"title\": \"请单击以下链接继续。\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"language\": \"zh-tw\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"strings\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"proceedMessage\": \"請按一下這裡繼續\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"title\": \"請按一下以下連結繼續。\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"message-box\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Message-Box-Okta_Con\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"ruleId\": \"Message-Box-cb8f980c\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"ruleType\": \"message-box\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"requestName\": \"HTTP-Request-Okta_Con\",\n\t\t\t\t\t\t\t\t\t\t\t\"ruleId\": \"HTTP-Connector-Okta_Con\",\n\t\t\t\t\t\t\t\t\t\t\t\"ruleType\": \"http-connector\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"ruleType\": \"saml\",\n\t\t\t\t\t\t\t\t\t\"service\": {\n\t\t\t\t\t\t\t\t\t\t\"acsBinding\": \"http-post\",\n\t\t\t\t\t\t\t\t\t\t\"entityId\": \"{{access_okta_signed_SPEntityID}}\",\n\t\t\t\t\t\t\t\t\t\t\"idpConnectors\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Idp\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\"name\": \"SAML-Federation\",\n\t\t\t\t\t\t\t\t\t\t\"spURI\": \"{{access_okta_signed_SPURI}}\",\n\t\t\t\t\t\t\t\t\t\t\"wantAssertionEncrypted\": false,\n\t\t\t\t\t\t\t\t\t\t\"wantAssertionSigned\": true\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\"itemType\": \"macro-call\",\n\t\t\t\t\t\t\t\"macro\": \"Generic-SAML-Federation\",\n\t\t\t\t\t\t\t\"name\": \"Generic-SAML-Federation\",\n\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"allow\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Deny\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"deny\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"policyType\": \"PerSession\",\n\t\t\t\t\"profileType\": \"all\",\n\t\t\t\t\"restrictToSingleClientIP\": false,\n\t\t\t\t\"scope\": \"profile\",\n\t\t\t\t\"secureCookie\": false,\n\t\t\t\t\"timeout\": 300,\n\t\t\t\t\"useHttp503OnError\": false\n\t\t\t},\n\t\t\t\"connectivityProfileConfiguration\": {\n\t\t\t\t\"clientPolicy\": {\n\t\t\t\t\t\"ecLocationDnsList\": [],\n\t\t\t\t\t\"name\": \"{{psp_policy_name}}_cap_clientPolicy\"\n\t\t\t\t},\n\t\t\t\t\"name\": \"{{psp_policy_name}}_cap\",\n\t\t\t\t\"policyType\": \"ConnectivityAccessPolicy\",\n\t\t\t\t\"pppTunnel\": {\n\t\t\t\t\t\"profilePpp\": {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"loggingConfiguration\": [\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"apmd\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"tmm\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"websso\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"renderer\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"id = resp.id;",
											"pm.collectionVariables.set(\"fast_path\", resp.path);",
											"pm.collectionVariables.set(\"appsvc-id\", id)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"access_okta_Connector_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"access_okta_Connector_policy\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{app_name}}\",\n  \"set_name\": \"Examples\",\n  \"template_name\": \"http\",\n  \"type\": \"FAST\",\n  \"description\": \"\",\n  \"parameters\": {\n    \"pools\": [\n      {\n        \"loadBalancingMode\": \"round-robin\",\n        \"loadBalancingRatio\": 10,\n        \"monitorType\": [\n          \"http\"\n        ],\n        \"servicePort\": {{example_web_port}},\n        \"application_name\": \"{{app_name}}\",\n        \"poolName\": \"pool_{{app_name}}\"\n      }\n    ],\n    \"virtuals\": [\n      {\n        \"FastL4_idleTimeout\": 600,\n        \"FastL4_looseClose\": true,\n        \"FastL4_looseInitialization\": true,\n        \"FastL4_resetOnTimeout\": true,\n        \"FastL4_tcpCloseTimeout\": 43200,\n        \"FastL4_tcpHandshakeTimeout\": 43200,\n        \"TCP_idle_timeout\": 60,\n        \"UDP_idle_timeout\": 60,\n        \"accessAdditionalConfigurations\": \" \",\n        \"enable_FastL4\": false,\n        \"enable_HTTP2_Profile\": false,\n        \"enable_TCP_Profile\": false,\n        \"enable_TLS_Client\": true,\n        \"enable_TLS_Server\": false,\n        \"enable_UDP_Profile\": false,\n        \"enable_snat\": true,\n        \"snat_addresses\": [],\n        \"snat_automap\": true,\n        \"enable_WAF\": false,\n        \"enable_Access\": true,\n        \"accessPolicyEnum\": \"{{psp_policy_name}}\",\n        \"enable_iRules\": false,\n        \"virtualPort\": {{vip_port2}},\n        \"pool\": \"pool_{{app_name}}\",\n        \"virtualName\": \"vs_{{app_name}}\",\n        \"certificatesEnum\": \"self_demo.f5.com\"\n      }\n    ],\n    \"application_name\": \"{{app_name}}\",\n    \"application_description\": \"{{app_name}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deploy Application to Instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)",
											"pm.collectionVariables.set(\"deploymentID\", resp.deployments[0].deploymentID)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"access_okta_Connector_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"access_okta_Connector_policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deployments\": [\n    {\n      \"parameters\": {\n        \"pools\": [\n          {\n            \"poolName\": \"pool_{{app_name}}\",\n            \"poolMembers\": [\n              {\n                \"address\": \"{{example_web}}\",\n                \"name\": \"poolmember1\"\n              }\n            ]\n          }\n        ],\n        \"virtuals\": [\n          {\n            \"virtualAddress\": \"{{access_okta_signed_vip}}\",\n            \"virtualName\": \"vs_{{app_name}}\"\n          }\n        ]\n      },\n      \"target\": {\n        \"address\": \"{{bigip_next_3_address}}\"\n      },\n      \"allow_overwrite\": true\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Access Sessions-All",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/access-sessions",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"access-sessions"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Policies GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"mbiq_policy_id\", pm.response.json()._embedded.policies[0].id);\r",
											"\r",
											"var policy_name_1 = \"Allow-Demo\"\r",
											"var resp = pm.response.json();\r",
											"pm.collectionVariables.set(\"mbiq_policy_id\", resp[\"_embedded\"][\"policies\"][0][\"id\"])\r",
											"pm.collectionVariables.set(\"mbiq_policy_name\", resp[\"_embedded\"][\"policies\"][0][\"name\"])\r",
											"var resp_policy_name_1 = pm.collectionVariables.get(\"mbiq_policy_name\")\r",
											"\r",
											"if ( policy_name_1  === resp_policy_name_1 ) {\r",
											"pm.test(\"Policy Found\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"}else {\r",
											"\r",
											"pm.test(\"Policy Not Found\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/apm/v1/policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"apm",
										"v1",
										"policies"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "OAuth Client-RS-Kerberos",
					"item": [
						{
							"name": "Login-CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Login status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var resp = pm.response.json();",
											"pm.environment.set(\"bigip_next_cm_token\", resp.access_token);",
											"pm.collectionVariables.set(\"bigip_next_cm_token\", resp.access_token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"{{bigip_next_cm_admin_password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/login",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Instance ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"resp = pm.response.json();\r",
											"\r",
											"pm.collectionVariables.set(\"fast_path\", resp._links.self.href);\r",
											"pm.collectionVariables.set(\"appsvc-id\", resp._embedded.devices[0].id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "default",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/device/v1/inventory?filter=address eq '{{bigip_next_mgmt_target_ip}}'",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"device",
										"v1",
										"inventory"
									],
									"query": [
										{
											"key": "filter",
											"value": "address eq '{{bigip_next_mgmt_target_ip}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create L3 forward DNS resolver",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "default",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\t\"name\": \"global_f5_internal_net_resolver\",\r\n\t\t\"config\": {\r\n\t\t\t\"name\": \"global_f5_internal_net_resolver\",\r\n\t\t\t\"useTcp\": true,\r\n\t\t\t\"useUdp\": true,\r\n\t\t\t\"useIpv4\": true,\r\n\t\t\t\"useIpv6\": false,\r\n\t\t\t\"description\": \"\",\r\n\t\t\t\"forwardZones\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"nameserver\": \"10.1.20.6:53\",\r\n\t\t\t\t\t\"forwardZone\": \".\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"l3ForwardType\": \"netResolver\",\r\n\t\t\t\"answerDefaultZones\": false,\r\n\t\t\t\"randomQueryNameCase\": false\r\n\t\t},\r\n\t\t\"vrf\": \"Default L3-Network\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/{{appsvc-id}}/l3forwards",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"{{appsvc-id}}",
										"l3forwards"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get L3 forward",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "default",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/{{appsvc-id}}/l3forwards",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"{{appsvc-id}}",
										"l3forwards"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create OAuth Client Policy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"psp_policy_name\", \"OAuth_Client_Policy\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{psp_policy_name}}\",\n\t\"policy_type\": \"PerSession\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"configuration\": {\n\t\t\t\t\"connectivityAccessPolicyName\": \"{{psp_policy_name}}_cap\",\n\t\t\t\t\"domainCookie\": \"\",\n\t\t\t\t\"externalServers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"clientId\": \" \",\n\t\t\t\t\t\t\"clientSecret\": \" \",\n\t\t\t\t\t\t\"clientTls\": {\n\t\t\t\t\t\t\t\"cipherstring\": \"DEFAULT\",\n\t\t\t\t\t\t\t\"tlsVersions\": {\n\t\t\t\t\t\t\t\t\"enableTLS1.1\": false,\n\t\t\t\t\t\t\t\t\"enableTLS1.2\": true,\n\t\t\t\t\t\t\t\t\"enableTLS1.3\": true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"dnsResolverName\": \"global_f5_internal_net_resolver\",\n\t\t\t\t\t\t\"mode\": \"client\",\n\t\t\t\t\t\t\"name\": \"OAuth-Server-Authorization_Server\",\n\t\t\t\t\t\t\"overrideVendorPresets\": false,\n\t\t\t\t\t\t\"providerName\": \"OAuth-Server-Provider\",\n\t\t\t\t\t\t\"serverType\": \"Oauth\",\n\t\t\t\t\t\t\"tokenValidationInterval\": 60\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"allowSelfSignedJwkCert\": true,\n\t\t\t\t\t\t\"authenticationUri\": \" \",\n\t\t\t\t\t\t\"enableAutoDiscovery\": true,\n\t\t\t\t\t\t\"ignoreExpiredCert\": false,\n\t\t\t\t\t\t\"introspect\": \"supported\",\n\t\t\t\t\t\t\"jwtConfig\": {\n\t\t\t\t\t\t\t\"accessTokenExpiresIn\": 0,\n\t\t\t\t\t\t\t\"allowedSigningAlgorithms\": [\n\t\t\t\t\t\t\t\t\"RS256\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"audience\": [],\n\t\t\t\t\t\t\t\"blockedKeys\": [],\n\t\t\t\t\t\t\t\"blockedSigningAlgorithms\": [],\n\t\t\t\t\t\t\t\"issuer\": \" \"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"name\": \"OAuth-Server-Provider\",\n\t\t\t\t\t\t\"openIdUri\": \" \",\n\t\t\t\t\t\t\"providerType\": \"okta\",\n\t\t\t\t\t\t\"serverType\": \"OauthProvider\",\n\t\t\t\t\t\t\"tokenUri\": \" \",\n\t\t\t\t\t\t\"tokenValidationScopeUri\": \" \",\n\t\t\t\t\t\t\"userinfoRequestUri\": \" \"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"httpOnlyCookie\": false,\n\t\t\t\t\"inactivityTimeout\": 900,\n\t\t\t\t\"logoutUriTimeout\": 5,\n\t\t\t\t\"maxConcurrentSessions\": 0,\n\t\t\t\t\"maxConcurrentUsers\": 0,\n\t\t\t\t\"maxFailureDelay\": 5,\n\t\t\t\t\"maxInProgressSessions\": 128,\n\t\t\t\t\"maxSessionTimeout\": 604800,\n\t\t\t\t\"minFailureDelay\": 2,\n\t\t\t\t\"name\": \"{{psp_policy_name}}\",\n\t\t\t\t\"persistentCookie\": false,\n\t\t\t\t\"policy\": {\n\t\t\t\t\t\"objectContent\": {\n\t\t\t\t\t\t\"defaultLanguage\": \"en\",\n\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"deny\",\n\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"allow\",\n\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"languages\": [\n\t\t\t\t\t\t\t\"en\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"macros\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"OAuth_Client_Flow\",\n\t\t\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\"grantType\": \"authorization-code\",\n\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\"itemType\": \"oauth-client\",\n\t\t\t\t\t\t\t\t\t\"name\": \"OAuth-Federation-Client_Rule\",\n\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Branch-Allow\",\n\t\t\t\t\t\t\t\t\t\t\t\"expression\": \"expr {[mcget {session.oauth.client.last.authresult}] == 1}\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"oauthServer\": \"OAuth-Server-Authorization_Server\",\n\t\t\t\t\t\t\t\t\t\"openidConnect\": true,\n\t\t\t\t\t\t\t\t\t\"openidFlowType\": \"hybrid\",\n\t\t\t\t\t\t\t\t\t\"openidHybridResponseType\": \"code-token\",\n\t\t\t\t\t\t\t\t\t\"redirectionUri\": \"https://%{session.server.network.name}/oauth/client/redirect\",\n\t\t\t\t\t\t\t\t\t\"requestAuthRedirect\": {\n\t\t\t\t\t\t\t\t\t\t\"headers\": [],\n\t\t\t\t\t\t\t\t\t\t\"method\": \"get\",\n\t\t\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"client_id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"client-id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"response_type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"response-type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"redirect_uri\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"redirect-uri\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"scope\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"scope\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"requestOpenidUserinfo\": {\n\t\t\t\t\t\t\t\t\t\t\"headers\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Authorization\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"Bearer %{session.oauth.client.last.access_token}\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\"method\": \"get\",\n\t\t\t\t\t\t\t\t\t\t\"parameters\": []\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"requestRefreshToken\": {\n\t\t\t\t\t\t\t\t\t\t\"headers\": [],\n\t\t\t\t\t\t\t\t\t\t\"method\": \"post\",\n\t\t\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"client_id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"client-id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"client_secret\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"client-secret\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"grant_type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"custom\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"refresh_token\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"requestToken\": {\n\t\t\t\t\t\t\t\t\t\t\"headers\": [],\n\t\t\t\t\t\t\t\t\t\t\"method\": \"post\",\n\t\t\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"client_id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"client-id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"client_secret\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"client-secret\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"grant_type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"grant-type\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"redirect_uri\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"redirect-uri\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"ruleId\": \"OAuth-Federation-ee434347\",\n\t\t\t\t\t\t\t\t\t\"ruleType\": \"oauth-client\",\n\t\t\t\t\t\t\t\t\t\"scope\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\"itemType\": \"macro-call\",\n\t\t\t\t\t\t\t\"macro\": \"OAuth_Client_Flow\",\n\t\t\t\t\t\t\t\"name\": \"Empty-97d2ba76\",\n\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Deny\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"deny\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"allow\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"policyType\": \"PerSession\",\n\t\t\t\t\"profileType\": \"all\",\n\t\t\t\t\"restrictToSingleClientIP\": false,\n\t\t\t\t\"samesiteCookie\": false,\n\t\t\t\t\"samesiteCookieAttrValue\": \"strict\",\n\t\t\t\t\"scope\": \"profile\",\n\t\t\t\t\"secureCookie\": false,\n\t\t\t\t\"timeout\": 300,\n\t\t\t\t\"useHttp503OnError\": false\n\t\t\t},\n\t\t\t\"connectivityProfileConfiguration\": {\n\t\t\t\t\"clientPolicy\": {\n\t\t\t\t\t\"ecLocationDnsList\": [],\n\t\t\t\t\t\"name\": \"{{psp_policy_name}}_cap_clientPolicy\"\n\t\t\t\t},\n\t\t\t\t\"name\": \"{{psp_policy_name}}_cap\",\n\t\t\t\t\"policyType\": \"ConnectivityAccessPolicy\",\n\t\t\t\t\"pppTunnel\": {\n\t\t\t\t\t\"profilePpp\": {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"loggingConfiguration\": [\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"apmd\",\n\t\t\t\t\t\"level\": \"DEBUG\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"tmm\",\n\t\t\t\t\t\"level\": \"DEBUG\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"websso\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"renderer\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create OAuth Client App",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"id = resp.id;",
											"pm.collectionVariables.set(\"fast_path\", resp.path);",
											"pm.collectionVariables.set(\"appsvc-id\", id)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"OAuth_Client_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"OAuth_Client_Policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{app_name}}\",\n  \"set_name\": \"Examples\",\n  \"template_name\": \"http\",\n  \"type\": \"FAST\",\n  \"description\": \"\",\n  \"parameters\": {\n\t\"enable_Global_Resiliency\": false,\n\t\"pools\": [],\n    \"virtuals\": [\n      {\n        \"FastL4_idleTimeout\": 600,\n        \"FastL4_looseClose\": true,\n        \"FastL4_looseInitialization\": true,\n        \"FastL4_resetOnTimeout\": true,\n        \"FastL4_tcpCloseTimeout\": 43200,\n        \"FastL4_tcpHandshakeTimeout\": 43200,\n        \"TCP_idle_timeout\": 60,\n        \"UDP_idle_timeout\": 60,\n        \"accessAdditionalConfigurations\": \" \",\n        \"enable_FastL4\": false,\n        \"enable_HTTP2_Profile\": false,\n        \"enable_TCP_Profile\": false,\n        \"enable_TLS_Client\": true,\n        \"enable_TLS_Server\": false,\n        \"enable_UDP_Profile\": false,\n        \"enable_snat\": true,\n        \"snat_addresses\": [],\n        \"snat_automap\": true,\n        \"enable_WAF\": false,\n        \"enable_Access\": true,\n        \"accessPolicyEnum\": \"{{psp_policy_name}}\",\n        \"enable_iRules\": false,\n        \"virtualPort\": {{vip_port2}},\n        \"virtualName\": \"vs_{{app_name}}\",\n        \"certificatesEnum\": \"{{traffic_ssl_cert}}\"\n      }\n    ],\n    \"application_name\": \"{{app_name}}\",\n    \"application_description\": \"{{app_name}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deploy OAuth Client Application to Instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)",
											"pm.collectionVariables.set(\"deploymentID\", resp.deployments[0].deploymentID)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"OAuth_Client_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"OAuth_Client_Policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deployments\": [\n    {\n      \"parameters\": {\n        \"virtuals\": [\n          {\n            \"virtualAddress\": \"{{access_OAuth_Client_vip}}\",\n            \"virtualName\": \"vs_{{app_name}}\"\n          }\n        ],\n        \"pools\": [\n\n        ]\n      },\n      \"additional_parameters\": {\n        \"access\": [\n          {\n            \"policyName\": \"{{psp_policy_name}}\",\n\t\t\t\"dnsResolvers\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"config\": {\n\t\t\t\t\t\t\t\t\t\"forwardZones\": [],\n\t\t\t\t\t\t\t\t\t\"l3ForwardType\": \"netResolver\",\n\t\t\t\t\t\t\t\t\t\"name\": \"OAuth_Client_Policy-OAuth-Server-Authorization_Server\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"l3Network\": \"Default L3-Network\",\n\t\t\t\t\t\t\t\t\"name\": \"OAuth_Client_Policy-OAuth-Server-Authorization_Server\"\n\t\t\t\t\t\t\t}\n\t\t\t],\n\t\t\t\"externalServers\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"dnsResolverName\": \"global_f5_internal_net_resolver\",\n\t\t\t\t\t\t\t\t\"name\": \"OAuth-Server-Authorization_Server\",\n\t\t\t\t\t\t\t\t\"serverType\": \"Oauth\"\n\t\t\t\t\t\t\t}\n\t\t\t],\n            \"l3Forwards\": [\n              {\n                \"name\": \"global_f5_internal_net_resolver\",\n                \"config\": {\n                  \"forwardZones\": [\n                    {\n                      \"forwardZone\": \".\",\n                      \"nameserver\": \"10.1.20.6:53\"\n                    }\n                  ],\n                  \"l3ForwardType\": \"netResolver\",\n                  \"name\": \"global_f5_internal_net_resolver\"\n                },\n                \"vrf\": \"Default L3-Network\"\n              }\n            ]\n          }\n        ]\n      },\n      \"target\": {\n        \"address\": \"{{bigip_next_3_address}}\"\n      },\n      \"allow_overwrite\": true\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create OAuth RS + SSO Policy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"psp_policy_name\", \"OAuth_RS_Policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{psp_policy_name}}\",\n\t\"policy_type\": \"PerSession\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"configuration\": {\n\t\t\t\t\"connectivityAccessPolicyName\": \"{{psp_policy_name}}_cap\",\n\t\t\t\t\"domainCookie\": \"\",\n\t\t\t\t\"externalServers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"dnsResolverName\": \"global_f5_internal_net_resolver\",\n\t\t\t\t\t\t\"mode\": \"resource-server\",\n\t\t\t\t\t\t\"name\": \"OAuth-Server-Authorization_Server\",\n\t\t\t\t\t\t\"overrideVendorPresets\": false,\n\t\t\t\t\t\t\"providerName\": \"OAuth-Provider-RS_Provider\",\n\t\t\t\t\t\t\"resourceServerId\": \" \",\n\t\t\t\t\t\t\"resourceServerSecret\": \" \",\n\t\t\t\t\t\t\"resourceServerTls\": {\n\t\t\t\t\t\t\t\"cipherstring\": \"DEFAULT\",\n\t\t\t\t\t\t\t\"tlsVersions\": {\n\t\t\t\t\t\t\t\t\"enableTLS1.1\": false,\n\t\t\t\t\t\t\t\t\"enableTLS1.2\": true,\n\t\t\t\t\t\t\t\t\"enableTLS1.3\": true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"serverType\": \"Oauth\",\n\t\t\t\t\t\t\"tokenValidationInterval\": 60\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"allowSelfSignedJwkCert\": true,\n\t\t\t\t\t\t\"authenticationUri\": \" \",\n\t\t\t\t\t\t\"enableAutoDiscovery\": true,\n\t\t\t\t\t\t\"ignoreExpiredCert\": true,\n\t\t\t\t\t\t\"introspect\": \"supported\",\n\t\t\t\t\t\t\"jwtConfig\": {\n\t\t\t\t\t\t\t\"accessTokenExpiresIn\": 0,\n\t\t\t\t\t\t\t\"allowedSigningAlgorithms\": [\n\t\t\t\t\t\t\t\t\"RS256\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"audience\": [],\n\t\t\t\t\t\t\t\"blockedKeys\": [],\n\t\t\t\t\t\t\t\"blockedSigningAlgorithms\": [],\n\t\t\t\t\t\t\t\"issuer\": \" \"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"lastDiscoveryTime\": \"Fri Jan 26 2024 10:49:23 GMT+0000 (Greenwich Mean Time)\",\n\t\t\t\t\t\t\"name\": \"OAuth-Provider-RS_Provider\",\n\t\t\t\t\t\t\"openIdUri\": \" \",\n\t\t\t\t\t\t\"providerType\": \"okta\",\n\t\t\t\t\t\t\"serverType\": \"OauthProvider\",\n\t\t\t\t\t\t\"tokenUri\": \" \",\n\t\t\t\t\t\t\"tokenValidationScopeUri\": \" \",\n\t\t\t\t\t\t\"userinfoRequestUri\": \" \"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"httpOnlyCookie\": false,\n\t\t\t\t\"inactivityTimeout\": 900,\n\t\t\t\t\"logoutUriTimeout\": 5,\n\t\t\t\t\"maxConcurrentSessions\": 0,\n\t\t\t\t\"maxConcurrentUsers\": 0,\n\t\t\t\t\"maxFailureDelay\": 5,\n\t\t\t\t\"maxInProgressSessions\": 128,\n\t\t\t\t\"maxSessionTimeout\": 604800,\n\t\t\t\t\"minFailureDelay\": 2,\n\t\t\t\t\"name\": \"{{psp_policy_name}}\",\n\t\t\t\t\"persistentCookie\": false,\n\t\t\t\t\"policy\": {\n\t\t\t\t\t\"objectContent\": {\n\t\t\t\t\t\t\"defaultLanguage\": \"en\",\n\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"deny\",\n\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"allow\",\n\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"languages\": [\n\t\t\t\t\t\t\t\"en\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"macros\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"OAuth-Federation-RS_Flow\",\n\t\t\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\"itemType\": \"oauth-scope\",\n\t\t\t\t\t\t\t\t\t\"name\": \"OAuth-Federation-RS_Rule\",\n\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Branch-3c80f0b9\",\n\t\t\t\t\t\t\t\t\t\t\t\"expression\": \"expr {[mcget {session.oauth.scope.last.authresult}] == 1}\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"oauthServer\": \"OAuth-Server-Authorization_Server\",\n\t\t\t\t\t\t\t\t\t\"requestValidationScopes\": {\n\t\t\t\t\t\t\t\t\t\t\"headers\": [],\n\t\t\t\t\t\t\t\t\t\t\"method\": \"post\",\n\t\t\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"client_id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"resource-server-id\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"client_secret\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"resource-server-secret\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"token\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"access-token\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"value\": \"\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"ruleId\": \"OAuth-Federation-RS_Rule\",\n\t\t\t\t\t\t\t\t\t\"ruleType\": \"oauth-scope\",\n\t\t\t\t\t\t\t\t\t\"scopeRequests\": [],\n\t\t\t\t\t\t\t\t\t\"tokenValidationMode\": \"external\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\"itemType\": \"macro-call\",\n\t\t\t\t\t\t\t\"macro\": \"OAuth-Federation-RS_Flow\",\n\t\t\t\t\t\t\t\"name\": \"Empty-7cf2b877\",\n\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Deny\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"deny\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"allow\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"policyType\": \"PerSession\",\n\t\t\t\t\"profileType\": \"all\",\n\t\t\t\t\"restrictToSingleClientIP\": false,\n\t\t\t\t\"samesiteCookie\": false,\n\t\t\t\t\"samesiteCookieAttrValue\": \"strict\",\n\t\t\t\t\"scope\": \"profile\",\n\t\t\t\t\"secureCookie\": false,\n\t\t\t\t\"ssoReference\": \"Kerberos-SSO-{{psp_policy_name}}\",\n\t\t\t\t\"ssos\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"accountName\": \"{{access_delegation_account_name}}\",\n\t\t\t\t\t\t\"accountPassword\": \"{{access_delegation_account_pwd}}\",\n\t\t\t\t\t\t\"domainSource\": \"session.logon.last.domain\",\n\t\t\t\t\t\t\"kdc\": \"10.1.20.6\",\n\t\t\t\t\t\t\"name\": \"Kerberos-SSO-{{psp_policy_name}}\",\n\t\t\t\t\t\t\"realm\": \"{{access_kdc_realm}}\",\n\t\t\t\t\t\t\"sendAuthorization\": \"always\",\n\t\t\t\t\t\t\"spnPattern\": \"{{access_SPN_Pattern}}\",\n\t\t\t\t\t\t\"ssoType\": \"Kerberos\",\n\t\t\t\t\t\t\"ticketLifetime\": 600,\n\t\t\t\t\t\t\"upn\": true,\n\t\t\t\t\t\t\"usernameSource\": \"session.oauth.scope.last.introspect.username\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"timeout\": 300,\n\t\t\t\t\"useHttp503OnError\": false\n\t\t\t},\n\t\t\t\"connectivityProfileConfiguration\": {\n\t\t\t\t\"clientPolicy\": {\n\t\t\t\t\t\"ecLocationDnsList\": [],\n\t\t\t\t\t\"name\": \"{{psp_policy_name}}_cap_clientPolicy\"\n\t\t\t\t},\n\t\t\t\t\"name\": \"{{psp_policy_name}}_cap\",\n\t\t\t\t\"policyType\": \"ConnectivityAccessPolicy\",\n\t\t\t\t\"pppTunnel\": {\n\t\t\t\t\t\"profilePpp\": {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"loggingConfiguration\": [\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"apmd\",\n\t\t\t\t\t\"level\": \"DEBUG\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"tmm\",\n\t\t\t\t\t\"level\": \"DEBUG\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"websso\",\n\t\t\t\t\t\"level\": \"DEBUG\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"renderer\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/apm/v1/policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"apm",
										"v1",
										"policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create OAuth RS App",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"id = resp.id;",
											"pm.collectionVariables.set(\"fast_path\", resp.path);",
											"pm.collectionVariables.set(\"appsvc-id\", id)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"OAuth_RS_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"OAuth_RS_Policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{app_name}}\",\n  \"set_name\": \"Examples\",\n  \"template_name\": \"http\",\n  \"type\": \"FAST\",\n  \"description\": \"\",\n  \"parameters\": {\n    \"pools\": [\n      {\n        \"loadBalancingMode\": \"round-robin\",\n        \"loadBalancingRatio\": 10,\n        \"monitorType\": [\n          \"http\"\n        ],\n        \"servicePort\": {{example_web_port}},\n        \"application_name\": \"{{app_name}}\",\n        \"poolName\": \"pool_{{app_name}}\"\n      }\n    ],\n    \"virtuals\": [\n      {\n        \"FastL4_idleTimeout\": 600,\n        \"FastL4_looseClose\": true,\n        \"FastL4_looseInitialization\": true,\n        \"FastL4_resetOnTimeout\": true,\n        \"FastL4_tcpCloseTimeout\": 43200,\n        \"FastL4_tcpHandshakeTimeout\": 43200,\n        \"TCP_idle_timeout\": 60,\n        \"UDP_idle_timeout\": 60,\n        \"accessAdditionalConfigurations\": \" \",\n        \"enable_FastL4\": false,\n        \"enable_HTTP2_Profile\": false,\n        \"enable_TCP_Profile\": false,\n        \"enable_TLS_Client\": true,\n        \"enable_TLS_Server\": false,\n        \"enable_UDP_Profile\": false,\n        \"enable_snat\": true,\n        \"snat_addresses\": [],\n        \"snat_automap\": true,\n        \"enable_WAF\": false,\n        \"enable_Access\": true,\n        \"accessPolicyEnum\": \"{{psp_policy_name}}\",\n        \"enable_iRules\": false,\n        \"pool\": \"pool_{{app_name}}\",\n        \"virtualPort\": {{vip_port2}},\n        \"virtualName\": \"vs_{{app_name}}\",\n        \"certificatesEnum\": \"{{traffic_ssl_cert}}\"\n      }\n    ],\n    \"application_name\": \"{{app_name}}\",\n    \"application_description\": \"{{app_name}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deploy OAuth RS Application to Instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)",
											"pm.collectionVariables.set(\"deploymentID\", resp.deployments[0].deploymentID)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"OAuth_RS_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"OAuth_RS_Policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deployments\": [\n    {\n      \"parameters\": {\n        \"pools\": [\n\t\t{\n            \"poolName\": \"pool_{{app_name}}\",\n            \"poolMembers\": [\n              {\n                \"address\": \"{{example_web}}\",\n                \"name\": \"poolmember1\"\n              }\n            ]\n          }\n\n        ],\n        \"virtuals\": [\n          {\n            \"virtualAddress\": \"{{access_azure_signed_vip}}\",\n            \"virtualName\": \"vs_{{app_name}}\"\n          }\n        ]\n      },\n      \"additional_parameters\": {\n        \"access\": [\n          {\n            \"policyName\": \"{{psp_policy_name}}\",\n\t\t\t\"dnsResolvers\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"config\": {\n\t\t\t\t\t\t\t\t\t\"forwardZones\": [],\n\t\t\t\t\t\t\t\t\t\"l3ForwardType\": \"netResolver\",\n\t\t\t\t\t\t\t\t\t\"name\": \"{{psp_policy_name}}-OAuth-Server-Authorization_Server\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"l3Network\": \"Default L3-Network\",\n\t\t\t\t\t\t\t\t\"name\": \"{{psp_policy_name}}-OAuth-Server-Authorization_Server\"\n\t\t\t\t\t\t\t}\n\t\t\t],\n\t\t\t\"externalServers\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"dnsResolverName\": \"global_f5_internal_net_resolver\",\n\t\t\t\t\t\t\t\t\"name\": \"{{psp_policy_name}}-OAuth-Server-Authorization_Server\",\n\t\t\t\t\t\t\t\t\"serverType\": \"Oauth\"\n\t\t\t\t\t\t\t}\n\t\t\t],\n            \"l3Forwards\": [\n              {\n                \"name\": \"global_f5_internal_net_resolver\",\n                \"config\": {\n                  \"forwardZones\": [\n                    {\n                      \"forwardZone\": \".\",\n                      \"nameserver\": \"10.1.20.6:53\"\n                    }\n                  ],\n                  \"l3ForwardType\": \"netResolver\",\n                  \"name\": \"global_f5_internal_net_resolver\"\n                },\n                \"vrf\": \"Default L3-Network\"\n              }\n            ]\n          }\n        ]\n      },\n      \"target\": {\n        \"address\": \"{{bigip_next_3_address}}\"\n      },\n      \"allow_overwrite\": true\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Apps through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {},
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/apm/v1/policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"apm",
										"v1",
										"policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Access Sessions-All",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/access-sessions",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"access-sessions"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Azure Policy + Kerberos SSO",
					"item": [
						{
							"name": "Login-CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Login status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var resp = pm.response.json();",
											"pm.environment.set(\"bigip_next_cm_token\", resp.access_token);",
											"pm.collectionVariables.set(\"bigip_next_cm_token\", resp.access_token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"{{bigip_next_cm_admin_password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/login",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Certificate Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"azure_signed_cert\",\r\n    \"cert_text\": \"-----BEGIN CERTIFICATE-----\\nMIIC8DCCAdigAwIBAgIQH1/+DEGWlahFP3UgVPfwHzANBgkqhkiG9w0BAQsFADA0MTIwMAYDVQQD\\nEylNaWNyb3NvZnQgQXp1cmUgRmVkZXJhdGVkIFNTTyBDZXJ0aWZpY2F0ZTAeFw0yMTA5MjMwOTUy\\nNTZaFw0yNDA5MjMwOTUyNTVaMDQxMjAwBgNVBAMTKU1pY3Jvc29mdCBBenVyZSBGZWRlcmF0ZWQg\\nU1NPIENlcnRpZmljYXRlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAyUoVByQJPICH\\nLp/koHHSR1JxfTdqJ3/Q3lEkI/0YkxwkuR0JpyruF5h7Iu6u5ZOEm2rn4+suKgc/sbjAExnmuBtt\\nMC2bfIKNKccZn39wOFv/j/EwqkMsEKIajKRths2MjQjhm4vZdz0kF9jqExzRLfbtyrxa/js+LFrf\\nSUY2RuPTEWiCrsa82tl4e+d6VbKBnu+25PG4sECZZtcRFkKkEddLzmqAQ4WQ/VhJLRL29guanbgA\\nlEdLA9fX6GS0hlRyCarC6ibGDdzfy2OC/nNBqsV79y6B5F1YTJO7RVNigow4JhyfeAXycmXytV41\\n+1Xqb5PWnwpFZdZsatL51KaCHQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQAWtlOLbldbemGndllR\\nn7on00W7a5zCbodV3AI6Tvh07CCdIgj8tZcz+KjcTNdtQ0abLuiBf0Wo9gJyq1rlg41jBK2Sg1o2\\n/PaYTCCPVvWu8KXjcZyj5/bAh5ZKU+yFsQgbfnZOgN99XzldTyTmZbOp+K+bKRxLZle1uxU4es8b\\nD6N2nMdHgepWaEj/dENmUu0i+ZMZziv4if3fHDnVA9oqkX9L5JB+HHQBI+H+qvKS/4FVCR3s8jtI\\nfXJAxnwNZqqtC1u64XPtALoLZpKLlVS9lx3soOpeAOB5MR6K3V2hwrdxHIIq+OwqhrZdmjDwGWDD\\n0FIqpD0YeGq82NnvqdGY\\n-----END CERTIFICATE-----\",\r\n    \"item_type\": \"PEM\"\r\n\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/certificate/v1/certificates/import",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"certificate",
										"v1",
										"certificates",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Certs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "default",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/certificate/v1/certificates",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"certificate",
										"v1",
										"certificates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Instance ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"resp = pm.response.json();\r",
											"\r",
											"pm.collectionVariables.set(\"fast_path\", resp._links.self.href);\r",
											"pm.collectionVariables.set(\"appsvc-id\", resp._embedded.devices[0].id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "default",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/device/v1/inventory?filter=address eq '{{bigip_next_mgmt_target_ip}}'",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"device",
										"v1",
										"inventory"
									],
									"query": [
										{
											"key": "filter",
											"value": "address eq '{{bigip_next_mgmt_target_ip}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create L3 forward DNS resolver",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "default",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\t\"name\": \"global_f5_internal_net_resolver\",\r\n\t\t\"config\": {\r\n\t\t\t\"name\": \"global_f5_internal_net_resolver\",\r\n\t\t\t\"useTcp\": true,\r\n\t\t\t\"useUdp\": true,\r\n\t\t\t\"useIpv4\": true,\r\n\t\t\t\"useIpv6\": false,\r\n\t\t\t\"description\": \"\",\r\n\t\t\t\"forwardZones\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"nameserver\": \"10.1.20.6:53\",\r\n\t\t\t\t\t\"forwardZone\": \".\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"l3ForwardType\": \"netResolver\",\r\n\t\t\t\"answerDefaultZones\": false,\r\n\t\t\t\"randomQueryNameCase\": false\r\n\t\t},\r\n\t\t\"vrf\": \"Default L3-Network\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/{{appsvc-id}}/l3forwards/",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"{{appsvc-id}}",
										"l3forwards",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get L3 forward",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "default",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/{{appsvc-id}}/l3forwards",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"{{appsvc-id}}",
										"l3forwards"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete L3 forward",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "default",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/{{appsvc-id}}/l3forwards/a5b80261-40bc-4ebf-8806-e9cf40a373f8",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"{{appsvc-id}}",
										"l3forwards",
										"a5b80261-40bc-4ebf-8806-e9cf40a373f8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a basic SAML SP Policy+SSO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"psp_policy_name\", \"signed_azure_policy\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{psp_policy_name}}\",\n\t\"policy_type\": \"PerSession\",\n\t\"properties\": [\n\t\t{\n\t\t\t\"configuration\": {\n\t\t\t\t\"connectivityAccessPolicyName\": \"{{psp_policy_name}}_cap\",\n\t\t\t\t\"domainCookie\": \"\",\n\t\t\t\t\"externalServers\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"certificate\": \"azure_signed_cert.crt\",\n\t\t\t\t\t\t\"entityId\": \"{{access_azure_signed_EntityID}}\",\n\t\t\t\t\t\t\"name\": \"Idp\",\n\t\t\t\t\t\t\"serverType\": \"SamlIdPConnector\",\n\t\t\t\t\t\t\"signatureType\": \"sha256\",\n\t\t\t\t\t\t\"ssoBinding\": \"http-post\",\n\t\t\t\t\t\t\"ssoUri\": \"{{access_azure_signed_SSOURI}}\",\n\t\t\t\t\t\t\"wantAuthnRequestSigned\": false\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"httpOnlyCookie\": false,\n\t\t\t\t\"inactivityTimeout\": 900,\n\t\t\t\t\"logoutUriTimeout\": 5,\n\t\t\t\t\"maxConcurrentSessions\": 0,\n\t\t\t\t\"maxConcurrentUsers\": 0,\n\t\t\t\t\"maxFailureDelay\": 5,\n\t\t\t\t\"maxInProgressSessions\": 128,\n\t\t\t\t\"maxSessionTimeout\": 604800,\n\t\t\t\t\"minFailureDelay\": 2,\n\t\t\t\t\"name\": \"{{psp_policy_name}}\",\n\t\t\t\t\"persistentCookie\": false,\n\t\t\t\t\"policy\": {\n\t\t\t\t\t\"objectContent\": {\n\t\t\t\t\t\t\"defaultLanguage\": \"en\",\n\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"deny\",\n\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"action\": \"allow\",\n\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"languages\": [\n\t\t\t\t\t\t\t\"en\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"macros\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"endings\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#199D4D\",\n\t\t\t\t\t\t\t\t\t\t\"default\": false,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"color\": \"#D9647A\",\n\t\t\t\t\t\t\t\t\t\t\"default\": true,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"name\": \"Generic-SAML-{{psp_policy_name}}\",\n\t\t\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\"isValid\": true,\n\t\t\t\t\t\t\t\t\t\"itemType\": \"saml\",\n\t\t\t\t\t\t\t\t\t\"name\": \"SAML-Federation-{{psp_policy_name}}\",\n\t\t\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\t\t\"expression\": \"expr {[mcget {session.saml.last.result}] == 1}\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\t\t\t\t\"itemType\": \"terminal-out\",\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"ruleType\": \"saml\",\n\t\t\t\t\t\t\t\t\t\"service\": {\n\t\t\t\t\t\t\t\t\t\t\"acsBinding\": \"http-post\",\n\t\t\t\t\t\t\t\t\t\t\"authCtxComparisonType\": \"exact\",\n\t\t\t\t\t\t\t\t\t\t\"entityId\": \"{{access_azure_Service_EntityID}}\",\n\t\t\t\t\t\t\t\t\t\t\"forceAuthn\": false,\n\t\t\t\t\t\t\t\t\t\t\"idpConnectors\": [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"Idp\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\"isAuthnRequestSigned\": false,\n\t\t\t\t\t\t\t\t\t\t\"name\": \"SAML-Federation-{{psp_policy_name}}\",\n\t\t\t\t\t\t\t\t\t\t\"spURI\": \"{{access_azure_Service_URI}}\",\n\t\t\t\t\t\t\t\t\t\t\"wantAssertionEncrypted\": false,\n\t\t\t\t\t\t\t\t\t\t\"wantAssertionSigned\": true\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"start\": {\n\t\t\t\t\t\t\t\"caption\": \"Fallback\",\n\t\t\t\t\t\t\t\"itemType\": \"macro-call\",\n\t\t\t\t\t\t\t\"macro\": \"Generic-SAML-{{psp_policy_name}}\",\n\t\t\t\t\t\t\t\"name\": \"Generic-SAML-Federation\",\n\t\t\t\t\t\t\t\"nextItems\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Allow\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"allow\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Allow\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"caption\": \"Deny\",\n\t\t\t\t\t\t\t\t\t\"itemType\": \"deny\",\n\t\t\t\t\t\t\t\t\t\"name\": \"Deny\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"policyType\": \"PerSession\",\n\t\t\t\t\"profileType\": \"all\",\n\t\t\t\t\"restrictToSingleClientIP\": false,\n\t\t\t\t\"samesiteCookie\": false,\n\t\t\t\t\"samesiteCookieAttrValue\": \"strict\",\n\t\t\t\t\"scope\": \"profile\",\n\t\t\t\t\"secureCookie\": false,\n\t\t\t\t\"ssoReference\": \"Kerberos-SSO-{{psp_policy_name}}\",\n\t\t\t\t\"ssos\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"accountName\": \"{{access_delegation_account_name}}\",\n\t\t\t\t\t\t\"accountPassword\": \"{{access_delegation_account_pwd}}\",\n\t\t\t\t\t\t\"domainSource\": \"session.logon.last.domain\",\n\t\t\t\t\t\t\"kdc\": \"10.1.20.6\",\n\t\t\t\t\t\t\"name\": \"Kerberos-SSO-{{psp_policy_name}}\",\n\t\t\t\t\t\t\"realm\": \"{{access_kdc_realm}}\",\n\t\t\t\t\t\t\"sendAuthorization\": \"always\",\n\t\t\t\t\t\t\"spnPattern\": \"{{access_SPN_Pattern}}\",\n\t\t\t\t\t\t\"ssoType\": \"Kerberos\",\n\t\t\t\t\t\t\"ticketLifetime\": 600,\n\t\t\t\t\t\t\"upn\": true,\n\t\t\t\t\t\t\"usernameSource\": \"session.saml.last.identity\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"timeout\": 300,\n\t\t\t\t\"useHttp503OnError\": false\n\t\t\t},\n\t\t\t\"connectivityProfileConfiguration\": {\n\t\t\t\t\"clientPolicy\": {\n\t\t\t\t\t\"ecLocationDnsList\": [],\n\t\t\t\t\t\"name\": \"{{psp_policy_name}}_cap_clientPolicy\"\n\t\t\t\t},\n\t\t\t\t\"name\": \"{{psp_policy_name}}_cap\",\n\t\t\t\t\"policyType\": \"ConnectivityAccessPolicy\",\n\t\t\t\t\"pppTunnel\": {\n\t\t\t\t\t\"profilePpp\": {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"loggingConfiguration\": [\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"apmd\",\n\t\t\t\t\t\"level\": \"DEBUG\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"tmm\",\n\t\t\t\t\t\"level\": \"DEBUG\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"websso\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"component\": \"renderer\",\n\t\t\t\t\t\"level\": \"NOTICE\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/security/access-policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"security",
										"access-policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"id = resp.id;",
											"pm.collectionVariables.set(\"fast_path\", resp.path);",
											"pm.collectionVariables.set(\"appsvc-id\", id)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"access_azure_sso_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"signed_azure_policy\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{app_name}}\",\n  \"set_name\": \"Examples\",\n  \"template_name\": \"http\",\n  \"type\": \"FAST\",\n  \"description\": \"\",\n  \"parameters\": {\n    \"pools\": [\n      {\n        \"loadBalancingMode\": \"round-robin\",\n        \"loadBalancingRatio\": 10,\n        \"monitorType\": [\n          \"http\"\n        ],\n        \"servicePort\": {{example_web_port}},\n        \"application_name\": \"{{app_name}}\",\n        \"poolName\": \"pool_{{app_name}}\"\n      }\n    ],\n    \"virtuals\": [\n      {\n        \"FastL4_idleTimeout\": 600,\n        \"FastL4_looseClose\": true,\n        \"FastL4_looseInitialization\": true,\n        \"FastL4_resetOnTimeout\": true,\n        \"FastL4_tcpCloseTimeout\": 43200,\n        \"FastL4_tcpHandshakeTimeout\": 43200,\n        \"TCP_idle_timeout\": 60,\n        \"UDP_idle_timeout\": 60,\n        \"accessAdditionalConfigurations\": \" \",\n        \"enable_FastL4\": false,\n        \"enable_HTTP2_Profile\": false,\n        \"enable_TCP_Profile\": false,\n        \"enable_TLS_Client\": true,\n        \"enable_TLS_Server\": false,\n        \"enable_UDP_Profile\": false,\n        \"enable_snat\": true,\n        \"snat_addresses\": [],\n        \"snat_automap\": true,\n        \"enable_WAF\": false,\n        \"enable_Access\": true,\n        \"accessPolicyEnum\": \"{{psp_policy_name}}\",\n        \"enable_iRules\": false,\n        \"virtualPort\": {{vip_port2}},\n        \"pool\": \"pool_{{app_name}}\",\n        \"virtualName\": \"vs_{{app_name}}\",\n        \"certificatesEnum\": \"{{traffic_ssl_cert}}\"\n      }\n    ],\n    \"application_name\": \"{{app_name}}\",\n    \"application_description\": \"{{app_name}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deploy Application to Instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body);",
											"console.log(pm.response.body);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)",
											"pm.collectionVariables.set(\"deploymentID\", resp.deployments[0].deploymentID)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"app_name\", \"access_azure_sso_app\");\r",
											"pm.collectionVariables.set(\"psp_policy_name\", \"signed_azure_policy\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deployments\": [\n    {\n      \"parameters\": {\n        \"pools\": [\n          {\n            \"poolName\": \"pool_{{app_name}}\",\n            \"poolMembers\": [\n              {\n                \"address\": \"{{example_web}}\",\n                \"name\": \"poolmember1\"\n              }\n            ]\n          }\n        ],\n        \"virtuals\": [\n          {\n            \"virtualAddress\": \"{{access_azure_signed_vip}}\",\n            \"virtualName\": \"vs_{{app_name}}\"\n          }\n        ]\n      },\n      \"target\": {\n        \"address\": \"{{bigip_next_3_address}}\"\n      },\n      \"allow_overwrite\": true\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Application through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Deployment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/appsvcs/blueprints/{{appsvc-id}}/deployments/{{deploymentID}}",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"appsvcs",
										"blueprints",
										"{{appsvc-id}}",
										"deployments",
										"{{deploymentID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieve Apps through CM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {},
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/apm/v1/policies",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"apm",
										"v1",
										"policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Access Sessions-All",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"AS3 declare status code is 202\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"console.log(pm.request.body);",
											"console.log(pm.response);",
											"",
											"resp = pm.response.json();",
											"pm.collectionVariables.set(\"fast_path\", resp.path)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bigip_next_cm_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{mbiq_token}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{bigip_next_cm_mgmt_ip}}/api/v1/spaces/default/instances/access-sessions",
									"protocol": "https",
									"host": [
										"{{bigip_next_cm_mgmt_ip}}"
									],
									"path": [
										"api",
										"v1",
										"spaces",
										"default",
										"instances",
										"access-sessions"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "bigip_next_1_name",
			"value": "big-ip-next-01"
		},
		{
			"key": "bigip_next_2_name",
			"value": "big-ip-next-02"
		},
		{
			"key": "bigip_next_ha_name",
			"value": "big-ip-next-ha"
		},
		{
			"key": "domain_name",
			"value": "f5demo.com"
		},
		{
			"key": "bigip_next_1_mgmt_ip",
			"value": "10.1.1.7"
		},
		{
			"key": "bigip_next_2_mgmt_ip",
			"value": "10.1.1.8"
		},
		{
			"key": "bigip_next_mgmt_floating_ip",
			"value": "10.1.1.9"
		},
		{
			"key": "bigip_next_mgmt_target_ip",
			"value": "10.1.1.10",
			"type": "string"
		},
		{
			"key": "bigip_next_mgmt_port",
			"value": "5443"
		},
		{
			"key": "bigip_next_admin_user",
			"value": "admin-cm"
		},
		{
			"key": "bigip_next_admin_password",
			"value": "Welcome123!"
		},
		{
			"key": "bigip_next_cm_mgmt_ip",
			"value": "10.1.1.5"
		},
		{
			"key": "bigip_next_cm_admin_user",
			"value": "cm-admin"
		},
		{
			"key": "bigip_next_cm_admin_password",
			"value": "Welcome123!"
		},
		{
			"key": "bigip_next_admin_user_cm",
			"value": "admin-cm"
		},
		{
			"key": "dns_server_1",
			"value": "10.1.1.6"
		},
		{
			"key": "dns_server_2",
			"value": "8.8.4.4"
		},
		{
			"key": "vip1",
			"value": "10.1.10.110"
		},
		{
			"key": "vip_port1",
			"value": "80"
		},
		{
			"key": "vip2",
			"value": "10.1.10.111"
		},
		{
			"key": "vip_port2",
			"value": "443"
		},
		{
			"key": "vip3",
			"value": "10.1.10.112"
		},
		{
			"key": "vip_port3",
			"value": "443"
		},
		{
			"key": "app_server1_ip",
			"value": "10.1.20.100"
		},
		{
			"key": "app_server2_ip",
			"value": "10.1.20.101"
		},
		{
			"key": "app_server_port",
			"value": "8080"
		},
		{
			"key": "psp_name_1",
			"value": ""
		},
		{
			"key": "resp_policy_id_1",
			"value": ""
		},
		{
			"key": "resp_policy_name_1",
			"value": ""
		},
		{
			"key": "prp_name_1",
			"value": ""
		},
		{
			"key": "bigip_next_platform_type",
			"value": "",
			"type": "default"
		},
		{
			"key": "dns_resolver_id",
			"value": ""
		},
		{
			"key": "name_server",
			"value": "10.1.1.6:53",
			"type": "string"
		},
		{
			"key": "example_web",
			"value": "10.1.20.6",
			"type": "string"
		},
		{
			"key": "example_web_port",
			"value": "80",
			"type": "string"
		},
		{
			"key": "services_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_okta_signed_EntityID",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_okta_signed_SSOURI",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_okta_signed_SPURI",
			"value": "https://signed.example.com",
			"type": "string"
		},
		{
			"key": "access_okta_signed_SPEntityID",
			"value": "https://signed.example.com",
			"type": "string"
		},
		{
			"key": "access_okta_unsigned_entityID",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_okta_unsigned_SSOURI",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_okta_unsigned_Service_URI",
			"value": "https://unsigned.example.com",
			"type": "string"
		},
		{
			"key": "access_okta_unsigned_Service_EntityID",
			"value": "https://unsigned.example.com",
			"type": "string"
		},
		{
			"key": "access_azure_signed_EntityID",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_azure_signed_SSOURI",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_azure_Service_URI",
			"value": "https://mbip-1.f5access.onmicrosoft.com/",
			"type": "string"
		},
		{
			"key": "access_azure_Service_EntityID",
			"value": "https://mbip-1.f5access.onmicrosoft.com/",
			"type": "string"
		},
		{
			"key": "access_okta_signed.examepl.com-cert",
			"value": "access_okta_signed.examepl.com-cert"
		},
		{
			"key": "access_azure_cert",
			"value": "access_azure_cert"
		},
		{
			"key": "access_azure_signed_vip",
			"value": "10.1.10.100",
			"type": "default"
		},
		{
			"key": "access_okta_unsigned_vip",
			"value": "10.1.10.104",
			"type": "default"
		},
		{
			"key": "access_okta_signed_vip",
			"value": "10.1.10.101",
			"type": "default"
		},
		{
			"key": "access_okta_unsigned_policy",
			"value": ""
		},
		{
			"key": "access_azure_signed_policy",
			"value": ""
		},
		{
			"key": "access_kdc_realm",
			"value": "F5ACCESS.ONMICROSOFT.COM",
			"type": "string"
		},
		{
			"key": "access_delegation_account_name",
			"value": "host/apm-deleg.f5access.onmicrosoft.com",
			"type": "string"
		},
		{
			"key": "access_delegation_account_pwd",
			"value": "F5twister$",
			"type": "string"
		},
		{
			"key": "access_SPN_Pattern",
			"value": "HTTP/%h@F5ACCESS.ONMICROSOFT.COM",
			"type": "string"
		},
		{
			"key": "allow_vip",
			"value": "10.1.10.112",
			"type": "string"
		},
		{
			"key": "allow_login_vip",
			"value": "10.1.10.113",
			"type": "string"
		},
		{
			"key": "deny_vip",
			"value": "10.1.10.114",
			"type": "string"
		},
		{
			"key": "bigip_next_1_token",
			"value": ""
		},
		{
			"key": "access_allow_policy",
			"value": ""
		},
		{
			"key": "access_logon_allow_policy",
			"value": ""
		},
		{
			"key": "access_deny_policy",
			"value": ""
		},
		{
			"key": "access_okta_signed_policy",
			"value": ""
		},
		{
			"key": "mbiq_token",
			"value": ""
		},
		{
			"key": "psp_policy_name",
			"value": ""
		},
		{
			"key": "mbiq_policy_id",
			"value": ""
		},
		{
			"key": "mbiq_policy_name",
			"value": ""
		},
		{
			"key": "fast_path",
			"value": ""
		},
		{
			"key": "bigip_next_3_address",
			"value": "10.1.1.10",
			"type": "default"
		},
		{
			"key": "bigip_next_3_hostname",
			"value": "big-ip-next-03.f5demo.com",
			"type": "default"
		},
		{
			"key": "okta_client_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "okta_client_secret",
			"value": "",
			"type": "string"
		},
		{
			"key": "bigip_next_cm_token",
			"value": ""
		},
		{
			"key": "oauth_client_VIP",
			"value": "10.1.10.210",
			"type": "string"
		},
		{
			"key": "oauth_client_policy",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "app_name",
			"value": ""
		},
		{
			"key": "appsvc-id",
			"value": ""
		},
		{
			"key": "traffic_ssl_cert",
			"value": "self_demo.f5.com",
			"type": "string"
		},
		{
			"key": "access_OAuth_Client_vip",
			"value": "10.1.10.105",
			"type": "string"
		},
		{
			"value": "",
			"type": "string"
		},
		{
			"key": "deploymentID",
			"value": ""
		},
		{
			"key": "epsecId",
			"value": "",
			"type": "string"
		},
		{
			"key": "vpnId",
			"value": "",
			"type": "string"
		}
	]
}
